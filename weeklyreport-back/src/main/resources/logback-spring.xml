<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>logback</contextName>
    <property name="log.path.prod" value="/Users/mac1/Documents/logs"/>  <!-- 生产环境 -->
    <property name="log.path.dev" value="/Users/mac1/Documents/logs"/> <!-- 测试环境 -->
    <property name="MaxHistory" value="90"/>  <!-- 日志文件夹最大保留时间 -->
    <property name="MaxFileSize" value="30MB"/>  <!-- 日志文件大小 -->
    <property name="TotalSizeCap" value="10GB"/>  <!-- 日志总量大小上限 -->

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>


    <!--输出到控制台 ConsoleAppender-->
    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <encoder class="com.caac.weeklyreport.config.logback.MyLogbackPatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!-- 日志字符集（默认ISO-8859-1） -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!--输出到文件-->
    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件输出格式-->
        <encoder class="com.caac.weeklyreport.config.logback.MyLogbackPatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <!-- 日志字符集（默认ISO-8859-1） -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <springProfile name="dev">
                <fileNamePattern>${log.path.dev}/info/${serverInfo}/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            </springProfile>
            <springProfile name="prod">
                <fileNamePattern>${log.path.prod}/info/${serverInfo}/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            </springProfile>
            <maxHistory>${MaxHistory}</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <maxFileSize>${MaxFileSize}</maxFileSize>
            <totalSizeCap>${TotalSizeCap}</totalSizeCap>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出 level为 WARN 日志 -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件输出格式-->
        <encoder class="com.caac.weeklyreport.config.logback.MyLogbackPatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <!-- 日志字符集（默认ISO-8859-1） -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <!--日志级别-->
            <springProfile name="dev">
                <fileNamePattern>${log.path.dev}/warn/${serverInfo}/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            </springProfile>
            <springProfile name="prod">
                <fileNamePattern>${log.path.prod}/warn/${serverInfo}/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            </springProfile>
            <maxHistory>${MaxHistory}</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <maxFileSize>${MaxFileSize}</maxFileSize>
            <totalSizeCap>${TotalSizeCap}</totalSizeCap>
        </rollingPolicy>
        <!-- 此日志文件只记录warn级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件输出格式-->
        <encoder class="com.caac.weeklyreport.config.logback.MyLogbackPatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <!-- 日志字符集（默认ISO-8859-1） -->
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <springProfile name="dev">
                <fileNamePattern>${log.path.dev}/error/${serverInfo}/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            </springProfile>
            <springProfile name="prod">
                <fileNamePattern>${log.path.prod}/error/${serverInfo}/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            </springProfile>
            <maxHistory>${MaxHistory}</maxHistory>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <maxFileSize>${MaxFileSize}</maxFileSize>
            <totalSizeCap>${TotalSizeCap}</totalSizeCap>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--
    使用mybatis的时候，sql语句是debug下才会打印，而这里我们只配置了info，所以想要查看sql语句的话，有以下两种操作：
    第一种把<root level="info">改成<root level="DEBUG">这样就会打印sql，不过这样日志那边会出现很多其他消息
    第二种就是单独给dao下目录配置debug模式，代码如下，这样配置sql语句会打印，其他还是正常info级别：
 -->
    <logger name="com.caac.weeklyreport.mapper" level="info"/>

    <!--异步打印日志记录器-->
    <appender name="InfoAsyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <includeCallerData>false</includeCallerData>
        <discardingThreshold>51</discardingThreshold>
        <queueSize>512</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="INFO_FILE" />
    </appender>
    <appender name="WarnAsyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <includeCallerData>false</includeCallerData>
        <discardingThreshold>51</discardingThreshold>
        <queueSize>512</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="WARN_FILE" />
    </appender>
    <appender name="ErrorAsyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <includeCallerData>false</includeCallerData>
        <discardingThreshold>51</discardingThreshold>
        <queueSize>512</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="ERROR_FILE" />
    </appender>
    <appender name="ConsoleAsyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <includeCallerData>false</includeCallerData>
        <discardingThreshold>51</discardingThreshold>
        <queueSize>512</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="CONSOLE" />
    </appender>

    <!--日志级别-->
    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="InfoAsyncAppender"/>
            <appender-ref ref="WarnAsyncAppender"/>
            <appender-ref ref="ErrorAsyncAppender"/>
            <appender-ref ref="ConsoleAsyncAppender"/>
        </root>
    </springProfile>
    <springProfile name="prod">
        <root level="warn">
            <appender-ref ref="WarnAsyncAppender"/>
            <appender-ref ref="ErrorAsyncAppender"/>
        </root>
    </springProfile>
</configuration>